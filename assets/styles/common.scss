---
# Front-matter to make Jekyll process this file (render to CSS).
---



@use "utilities" as *;

@use 'reset';
@use 'typography';
@use 'fonts';
@use 'links';



:root {
	@extend %font--times--regular;

	--typography--leading:        1.333;
	--typography--leading--tight: 1;

	--typography--tracking: -0.015;

	--typography--size: 1.8rem;

	--typography--size--h1: calc(var(--typography--size) * 3);
	--typography--size--h2: calc(var(--typography--size) * 1.75);
	--typography--size--h3: calc(var(--typography--size) * 1.25);

	--margin:           2.4rem;
	--margin--vertical: var(--margin);

	--page--width: 100vw;

	--color:             black;
	--color--background: white;

	--color--links:          blue;
	--color--links--reverse: white ;

	--color--highlight:          hsl(0, 0%, 0%, 3.333%);
	--color--highlight--reverse: hsl(0, 0%, 100%, 6.666%);

	--link--color:       var(--color--links);
	--link--enlargement: 0.4rem;
	--link--highlight:   var(--color--highlight);
	--link--outline:     0.2rem;

	--link--hover--opacity:    0.666;
	--link--hover--transition: 100ms;

	--alpha--disabled: 0.333;

	scroll-behavior: smooth;

	@include hover {
		--color--highlight:          hsl(0, 0%, 0%, 6.666%); // Denser to offset hover opacity.
		--color--highlight--reverse: hsl(0, 0%, 100%, 13.333%);
	}

	@include browser-specific(safari--mobile) {
		--color--highlight:          hsl(0, 0%, 0%, 10%);
		--color--highlight--reverse: hsl(0, 0%, 100%, 20%);
	}

	@include breakpoint(320) { --typography--size: calc((20/375) * 100vw); }

	@include breakpoint(768) {
		--typography--size: 2.2rem;

		--typography--size--h1: calc(var(--typography--size) * 4);
		--typography--size--h2: calc(var(--typography--size) * 2);

		--margin: 3.6rem;

		--link--enlargement: 0.8rem;
	}

	@include breakpoint(980) {
		--margin:      4.8rem;
		--page--width: 98rem;
	}

	@include landscape { --margin--vertical: calc(var(--margin) * 0.618); }
	@include tall      { --margin--vertical: var(--margin); }
}



body {
	h1 {
		@extend %font--times--kerning;
	}

	h1,
	h2,
	h3 {
		--typography--leading: var(--typography--leading--tight);
	}

	h1 { --typography--size: var(--typography--size--h1); }
	h2 { --typography--size: var(--typography--size--h2); }
	h3 { --typography--size: var(--typography--size--h3); }



	// The main column constraints.
	%page--container {
		margin-left:    auto;
		margin-right:   auto;
		max-width:      var(--page--width);
		padding-left:   var(--margin);
		padding-right:  var(--margin);
		width:          100%;
	}



	// Breadcrumb thing.
	> nav {
		@extend %type--layout;

		background-color: var(--color--background);
		margin-bottom:    calc(var(--typography--cap) * -1);
		padding-bottom:   var(--typography--cap);
		padding-top:      var(--margin--vertical);
		position:         sticky;
		top:              calc(var(--typography--cap) - var(--margin--vertical));
		z-index:          1;

		> div {
			@extend %page--container;

			align-items:           end;
			display:               grid;
			gap:                   var(--margin);
			grid-template-columns: max-content minmax(0, 1fr) max-content;

			> a {
				@extend %link--element;

				> p {
					color: var(--link--color);
				}
			}



			// Icons.
			span:last-child {
				@extend %font--sf--light;

				font-weight: var(--typography--weight);
				display:     inline-block;
				text-align:  right;
				width:       1em; // Prevent bobbling.

				// Center down to x-height;
				&.center--x {
					transform: translateY(0.066em);
				}
			}



			// A solo title, no `select`.
			> p {
				opacity: var(--alpha--disabled);
			}

			// The `select` drop-down container.
			> div {
				--color: var(--color--links);

				line-height:   initial;
				margin:        calc(-1 * var(--typography--cap));
				overflow:      hidden;
				padding:       var(--typography--cap);

				margin-right:  initial; // Lower to clear the all-around.
				padding-right: initial;

				> p {
					color:          transparent; // Just here to set the width.
					max-width:      calc(100% - var(--link--enlargement) - var(--link--outline));
					pointer-events: none;
					position:       relative;
					white-space:    nowrap;
					width:          fit-content;

					> select {
						@extend %link--select;

						color:          var(--color);
						left:           0;
						pointer-events: auto;
						position:       absolute;
						text-overflow:  ellipsis;
					}
				}
			}
		}
	}



	// Inset text column.
	> main {
		@extend %page--container;

		margin-bottom:  50vh;

		> header {
			margin-bottom: calc(var(--margin--vertical) * 4);
			margin-top:    calc(var(--margin--vertical) * 4);
		}

		// Parsed Markdown block.
		> article {
			h2,
			h3,
			p {
				max-width: 72ch;
			}

			> h2 {
				margin-bottom: calc(var(--margin--vertical) * 2);
				margin-top:    calc(var(--margin--vertical) * 4);
			}

			> h3 {
				margin-top: calc(var(--margin--vertical) * 2);
			}

			> * {
				--typography--extra-lines: 1; // Sequential spacing.
			}

			a {
				@extend %link--text;

				color: var(--link--color);
			}

			p strong {
				@extend %font--times--bold;

				font-weight: var(--typography--weight);
			}


			// Temp.
			> ul {
				margin-top: calc(var(--margin--vertical) * 4);

				> li {
					margin-top: var(--margin--vertical);
				}
			}
		}
	}



	&.index {
		@extend %--reverse;
	}
}



	// Flip the colors.
%--reverse {
	--color--background--parent: var(--color--background);

	--link--color:     var(--color--links--reverse);
	--link--highlight: var(--color--highlight--reverse);

	background-color: var(--color--links);

	> * {
		--color:             var(--color--background--parent);
		--color--background: var(--color--links);
	}
}
