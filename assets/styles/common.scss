---
# Front-matter to make Jekyll process this file (render to CSS).
---



@use "utilities" as *;

@use 'typography';
@use 'fonts';
@use 'links';



:root {
	@extend %font--sf--mono--regular;

	--typography--leading:        1.333;
	--typography--leading--loose: 2;
	--typography--leading--base:  var(--typography--leading); // For resets.

	--typography--size: 1.6rem;

	--typography--size--code: calc(var(--typography--size) * 8 / 9);

	--margin: 2.4rem;

	--page--width: 100vw;

	--border--radius: 0.4rem;

	--color:             black;
	--color--background: white;

	--color--tint:          #f6f6f6;
	--color--tint--reverse: #e95349;

	--color--links:          #e42a1d;
	--color--links--reverse: white;

	--color--code:             #666666;
	--color--code--background: var(--color--tint);

	--color--highlight:          hsl(0, 0%, 0%, 3.333%);
	--color--highlight--reverse: hsl(0, 0%, 100%, 6.666%);

	--color--transition: 200ms;

	--link--color:       var(--color--links);
	--link--enlargement: 0.4rem;
	--link--highlight:   var(--color--highlight);
	--link--outline:     0.2rem;

	--link--hover--opacity:    0.666;
	--link--hover--transition: 100ms;

	--alpha--inactive: 0.333;

	scroll-behavior: smooth;

	@include hover {
		--color--highlight:          hsl(0, 0%, 0%, 5%); // Denser to offset hover opacity.
		--color--highlight--reverse: hsl(0, 0%, 100%, 10%);
	}

	@include breakpoint(320) { --typography--size: calc((16/375) * 100vw) }

	@include breakpoint(768) {
		--typography--size: 1.8rem;

		--margin: 3.6rem;

		--link--enlargement: 0.8rem;
	}

	@include breakpoint(1024) {
		--margin:      4.8rem;
		--page--width: 102.4rem;
	}



	// For code example embeds, inside margins.
	&.iframe {
		--typography--size: 1.6rem;
		--margin:           2.4rem;

		@include breakpoint(696) {
			--typography--size: 1.8rem;
			--margin:           4.8rem;
		}
	}
}



// The main column constraints.
%--page-container {
		margin-left:   auto;
		margin-right:  auto;
		max-width:     var(--page--width);
		padding-left:  calc(var(--margin) + env(safe-area-inset-left, 0rem));
		padding-right: calc(var(--margin) + env(safe-area-inset-right, 0rem));
		width:         100%;
	}



// Flip the colors.
%--reverse {
	--color--code--background: var(--color--tint--reverse);

	--color--background--parent: var(--color--background);

	--link--color:     var(--color--links--reverse);
	--link--highlight: var(--color--highlight--reverse);

	background-color: var(--color--links);

	> * {
		--color:             var(--color--background--parent);
		--color--background: var(--color--links);
	}
}



body {
	@extend %type--layout;

	--margin--vertical: calc(var(--typography--between) + var(--typography--font-size) * var(--typography--leading));

	--margin--vertical--2: calc(var(--typography--between) + 2 * var(--typography--font-size) * var(--typography--leading));
	--margin--vertical--4: calc(var(--typography--between) + 4 * var(--typography--font-size) * var(--typography--leading));
	--margin--vertical--6: calc(var(--typography--between) + 6 * var(--typography--font-size) * var(--typography--leading));
	--margin--vertical--8: calc(var(--typography--between) + 8 * var(--typography--font-size) * var(--typography--leading));

	// Basics.
	h1,
	h2,
	h3,
	h4 {
		scroll-margin-top: calc(var(--margin--vertical--2) + var(--typography--cap) * 3);
		max-width: 50ch;
	}

	&.index h1 { max-width: 12ch }



	// Breadcrumb thing.
	> nav {
		@extend %type--layout;

		background-color: var(--color--background);
		margin-bottom:    calc(var(--typography--cap) * -1);
		overflow:         hidden; // Fix horizontal scroll on Safari.
		padding-bottom:   var(--typography--cap);
		padding-top:      var(--margin--vertical);
		position:         sticky;
		top:              calc(var(--typography--cap) - var(--margin--vertical));
		z-index:          1;

		> div {
			@extend %--page-container;

			display:               grid;
			gap:                   var(--margin);
			grid-template-columns: minmax(0, 1fr) max-content;

			@include breakpoint(568) {
				grid-template-columns: repeat(3, minmax(0, 1fr));

				> section:first-child { grid-column: 1 / span 2 }
			}

			// Left/main rail.
			> section:first-child {
				align-items:           end;
				display:               grid;
				gap:                   var(--margin);
				grid-template-columns: max-content minmax(0, 1fr);

				> a {
					@extend %link--element;

					> p {
						@extend %--nav--transition--colors;

						color: var(--link--color);
					}
				}

				// The `select` drop-down container.
				> p {
					--icon--width: 2ch;

					color:          transparent; // Just here to set the width.
					margin-bottom:  var(--typography--margin--bottom);
					padding-right:  var(--icon--width); // For the icon.
					pointer-events: none;
					position:       relative;
					white-space:    nowrap;
					width:          fit-content;

					// The actual drop-down.
					> select {
						@extend %--nav--transition--colors;
						@extend %link--text;

						color:          var(--link--color);
						left:           0;
						max-width:      calc(100% + var(--link--enlargement) * 2); // Icon.
						overflow:       hidden;
						padding-right:  var(--icon--width);
						pointer-events: auto;
						position:       absolute;
						text-overflow:  ellipsis;
					}

					// The icon.
					&:after  {
						@extend %--nav--transition--colors;
						@extend %font--sf--mono--light;

						color:       var(--link--color);
						content:     '↕';
						font-weight: 100; // Force it.
						position:    absolute;
						right:       0;
						text-align:  right;
						top:         var(--typography--margin--top);
						transform:   translateY(0.066em);
						visibility:  visible;
						width:       var(--icon--width);
					}

					@include hover {
						&:hover:after {
							$thanksNex3: 'opacity(var(--link--hover--opacity))';

							filter: unquote($thanksNex3);
						}
					}
				}
			}

			// Right rail.
			> section:last-child {
				display: grid;

				> p {
					@extend %--nav--transition--opacity;

					grid-row:    1;
					grid-column: 1;

					> a {
						@extend %--nav--transition--colors;
						@extend %icon--link;
					}

					// This/Last week link.
					&:first-child {
						transition-delay: calc(var(--color--transition) / 2), 0ms;
						opacity:          1;
						visibility:       visible;
					}

					// Top link.
					&:last-child {
						justify-self:     end;
						opacity:          0;
						transition-delay: 0ms, calc(var(--color--transition) / 2);
						visibility:       hidden;
					}
				}
			}
		}



		// Transitions.
		transition-duration:        var(--color--transition);
		transition-property:        background-color;
		transition-timing-function: linear;

		%--nav--transition--colors {
			transition-duration:        var(--color--transition), var(--link--hover--transition);
			transition-property:        color, filter;
			transition-timing-function: linear;
		}

		%--nav--transition--opacity {
			transition-duration:        calc(var(--color--transition) / 2), 0ms;
			transition-property:        opacity, visibility;
			transition-timing-function: linear;
		}
	}



	// Inset text column.
	> main {
		@extend %--page-container;

		padding-top:    var(--margin--vertical--4);
		padding-bottom: var(--margin--vertical--4);

		> header {
			margin-bottom: var(--margin--vertical--4);

			@include breakpoint(568) {
				column-gap:            var(--margin);
				display:               grid;
				grid-auto-rows:        min-content 1fr;
				grid-template-columns: repeat(3, minmax(0, 1fr));
				margin-bottom:         var(--margin--vertical--8);

				> h1 { grid-column: 1 / span 2 }
				> h1:only-child { grid-column: 1 / span 3 }
			}



			// The date.
			> p {
				margin-top: var(--margin--vertical);

				@include breakpoint(568) { grid-column: 1 / span 2 }
			}



			// Right rail.
			> address,
			> ul {
				@extend %type--layout;

				display:        flex;
				flex-direction: column;
				margin-top:     var(--margin--vertical--2);

				@include breakpoint(568) {
					grid-row:    1 / span 2;
					grid-column: 3 / span 1;
					margin-top:  initial;
				}
			}

			@include breakpoint(568) {
				> h1 + ul { grid-row:  1 / span 1 } // Without a date before it.
			}



			// The info block on the index.
			> address {
				gap: var(--margin--vertical);

				> div {
					> p > a { @extend %icon--link }

					> p:not(:first-child) { margin-top: var(--typography--between) }
				}
			}



			// The ToC.
			> ul {
				--typography--leading: var(--typography--leading--loose);

				gap: var(--typography--between);

				@include breakpoint(568) { --typography--leading: var(--typography--leading--base) }

				> li {
					@extend %typography;

					> a { @extend %icon--link }
				}
			}
		}



		// Parsed Markdown block.
		@import 'markdown';



		// Home/top links at the end.
		> footer {
			margin-top: max(var(--margin--vertical--4), calc(50vh - var(--margin--vertical--4)));

			> div {
				--color: var(--link--color);

				align-items:           start;
				display:               grid;
				gap:                   calc(var(--margin) / 2);
				grid-template-columns: minmax(0, 1fr) max-content;
				margin-top:            var(--margin--vertical);

				> section:first-child > a { @extend %link--element }

				> section:last-child > p > a { @extend %icon--link; }
			}
		}

	}



	// From the JS.
	&.scrolled {
		> nav {
			@extend %--reverse;

			> div > section:last-child > p {
				// This/Last week link.
				> &:first-child {
					opacity:          0;
					transition-delay: 0ms, calc(var(--color--transition) / 2);
					visibility:       hidden;
				}

				// Top link.
				> &:last-child {
					transition-delay: calc(var(--color--transition) / 2), 0ms;
					opacity:          1;
					visibility:       visible;
				}
			}
		}
	}



	// Unique to the landing page.
	&.index {
		@extend %--reverse;

		> main {
			// Index indexes.
			> nav {
				column-gap: var(--margin);
				display:    grid;
				margin-top: var(--margin--vertical--4);
				row-gap:    var(--margin--vertical--2);

				@include breakpoint(568) { grid-template-columns: repeat(3, minmax(0, 1fr)) }

				// Each list.
				aside {
					> menu {
						@extend %type--layout;

						--typography--leading: var(--typography--leading--loose);

						display:        flex;
						flex-direction: column;
						gap:            var(--typography--between);
						margin-top:     var(--margin--vertical);

						@include breakpoint(568) { --typography--leading: var(--typography--leading--base) }

						> li {
							@extend %typography;

							> a { @extend %icon--link }
						}
					}
				}
			}
		}
	}



	// Class list.
	&.class {
		@extend %--reverse;

		> main {
			> article {
				> p {
					grid-column: 1;

					> button { @extend %icon--link }
				}

				> ul {
					--groups:           2;

					column-gap:         var(--margin);
					display:            grid;
					grid-auto-columns:  minmax(0, 1fr);
					grid-auto-flow:     column;
					grid-template-rows: repeat(calc(var(--count) / var(--groups)), min-content);
					list-style:         initial;
					padding:            initial;

					@include breakpoint(568) {
						--margin--top:  0rem;

						grid-column: 3 / span 4;
					}

					> li {
						display: block;
						padding: initial;
					}
				}
			}
		}
	}



	// Code!
	code {
		--color:            var(--color--code);
		--typography--size: var(--typography--size--code);

		color:       var(--color);
		font-size:   var(--typography--size);
		font-style:  normal;
		white-space: pre;
	}

	// Inline code.
	*:not(pre) > code {
		background-color: var(--color--code--background);
		border-radius:    var(--border--radius);
		letter-spacing:   0.0775em; // Counteract the scale.
		line-height:      var(--typography--leading);
		margin-left:     -0.2em;
		margin-right:    -0.2em;
		padding:          0.1em 0.2em;
		user-select:      all;
	}

	// “Fenced” code blocks.
	pre {
		background-color: var(--color--code--background);
		border-radius:    var(--border--radius);
		overflow-x:       scroll;
		padding:          calc(var(--margin) / 2);
		tab-size:         2;

		code {
			@extend %typography;

			--typography--leading: 1.25;
		}
	}

	li pre { padding: calc(var(--margin) / 4) } // Tighter in lists.



	// Code examples.
	@import 'example';
}



// Icons.
%icon--link {
	@extend %font--underline--disable;
	@extend %link--text;

	--color: var(--link--color);

	--icon--gap:   1ch;
	--icon--scale: 1.1;
	--icon--shift: 0.075em;
	--icon--width: 1ch;

	border-right-width: calc(var(--icon--width) + var(--icon--gap) + var(--link--enlargement));
	color:              var(--link--color);
	display:            inline-block;

	&:after {
		@extend %font--sf--mono--light;

		content:      var(--icon);
		display:      inline-block;
		font-weight:  var(--typography--weight);
		margin-left:  var(--icon--gap);
		margin-right: calc(-1 * (var(--icon--width) + var(--icon--gap)));
		transform:    translateY(var(--icon--shift, 0rem)) scale(var(--icon--scale, 1));
		width:        var(--icon--width);
	}

	&:empty {
		border-right-width: var(--link--enlargement);
		width:              fit-content;

		&:after {
			margin-left:  initial;
			margin-right: initial;
		}
	}

	&[href^="/"]    { --icon: '→' } // Internal.
	&[href^="http"] { --icon: '↗'; --icon--shift: 0.3rem } // External.
	&[href^="#"]    { --icon: '↓' } // Anchor.

	&[href*=".pdf"],
	&[href="#"],
	&.copy,
	&.last,
	&.shuffle,
	&.this {
		--icon--scale: 1;
		--icon--shift: 0em;

		&:after { @extend %font--sf--light }
	}

	&[href*=".pdf"] { --icon: '⤓'; --icon--shift: 0.05em}
	&[href="#"]     { --icon: '⤒'; --icon--width: 1.1ch }
	&.copy          { --icon: '⊕'; --icon--width: 2ch; --icon--scale: 1.25; text-align: center };
	&.last          { --icon: '↺' }
	&.shuffle       { --icon: '⇅'; --icon--width: 2ch }
	&.this          { --icon: '⤴' }
}
