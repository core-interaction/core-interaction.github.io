---
# Front-matter to make Jekyll process this file (render to CSS).
---



@use "utilities" as *;

@use 'reset';
@use 'typography';
@use 'fonts';
@use 'links';



:root {
	@extend %font--sf--mono--regular;

	--typography--leading:        1.333;
	--typography--leading--loose: 2;
	--typography--leading--base:  var(--typography--leading); // For resets.

	--typography--size: 1.6rem;

	--margin: 2.4rem;

	--page--width: 100vw;

	--border--radius: 0.4rem;

	--color:             black;
	--color--alpha: var(--color--tint);
	--color--background: white;

	--color--tint:          hsl(0, 0%, 0%, 5%);
	--color--tint--reverse: hsl(0, 0%, 100%, 10%);

	--color--links:          #e42a1d;
	--color--links--reverse: white;

	--color--highlight:          hsl(0, 0%, 0%, 3.333%);
	--color--highlight--reverse: hsl(0, 0%, 100%, 6.666%);

	--link--color:       var(--color--links);
	--link--enlargement: 0.4rem;
	--link--highlight:   var(--color--highlight);
	--link--outline:     0.2rem;

	--link--hover--opacity:    0.666;
	--link--hover--transition: 100ms;

	--alpha--inactive: 0.333;

	scroll-behavior: smooth;

	@include hover {
		--color--highlight:          hsl(0, 0%, 0%, 5%); // Denser to offset hover opacity.
		--color--highlight--reverse: hsl(0, 0%, 100%, 10%);
	}

	@include breakpoint(320) { --typography--size: calc((16/375) * 100vw) }

	@include breakpoint(768) {
		--typography--size: 1.8rem;

		--margin: 3.6rem;

		--link--enlargement: 0.8rem;
	}

	@include breakpoint(1024) {
		--margin:      4.8rem;
		--page--width: 102.4rem;
	}
}



	// The main column constraints.
%--page-container {
	margin-left:   auto;
	margin-right:  auto;
	max-width:     var(--page--width);
	padding-left:  var(--margin);
	padding-right: var(--margin);
	width:         100%;
}



// Flip the colors.
%--reverse {
	--color--alpha: var(--color--tint--reverse);

	--color--background--parent: var(--color--background);

	--link--color:     var(--color--links--reverse);
	--link--highlight: var(--color--highlight--reverse);

	background-color: var(--color--links);

	> * {
		--color:             var(--color--background--parent);
		--color--background: var(--color--links);
	}
}



// Icon stuff.
%--icon--span {
	--icon--gap: 1ch;

	display:     inline-block;
	font-weight: var(--typography--weight);
	margin-left: var(--icon--gap);
	transform:   translateY(var(--icon--shift, 0rem)) scale(var(--icon--scale, 1));
	width:       1ch;

	&.center--x { --icon--shift: 0.075em } // Center down to x-height;
}



body {
	@extend %type--layout;

	--margin--vertical: calc(var(--typography--between) + var(--typography--font-size) * var(--typography--leading));

	--margin--vertical--2: calc(var(--typography--between) + 2 * var(--typography--font-size) * var(--typography--leading));
	--margin--vertical--4: calc(var(--typography--between) + 4 * var(--typography--font-size) * var(--typography--leading));

	// Basics.
	h1,
	h2,
	h3,
	h4 {
		scroll-margin-top: var(--margin--vertical--2);
		max-width: 40ch;
	}

	&.index h1 { max-width: 12ch }



	// Icons. Keep these up here so Markdown variants cascade.
	.icon--sf {
		@extend %--icon--span;
		@extend %font--sf--mono--light;

		--icon--scale: 1.1;
	}

	.icon--emoji {
		@extend %--icon--span;

		--icon--scale: 1.1;

		text-align: center;
		width:      2ch; // For these wide boys.
	}

	.icon--sf--regular {
		@extend %--icon--span;
		@extend %font--sf--light;

		--icon--scale: 1;

		&.center--x { --icon--shift: 0.05em }
	}



	// Breadcrumb thing.
	> nav {
		@extend %type--layout;

		background-color: var(--color--background);
		margin-bottom:    calc(var(--typography--cap) * -1);
		overflow:         hidden; // Fix horizontal scroll on Safari.
		padding-bottom:   var(--typography--cap);
		padding-top:      var(--margin--vertical);
		position:         sticky;
		top:              calc(var(--typography--cap) - var(--margin--vertical));
		z-index:          1;

		> div {
			@extend %--page-container;

			align-items:           end;
			display:               grid;
			gap:                   var(--margin);
			grid-template-columns: max-content minmax(0, 1fr) max-content;

			> a {
				@extend %link--element;

				> p { color: var(--link--color) }
			}



			// The `select` drop-down container.
			> div {
				--color: var(--color--links);

				line-height:   initial;

				> p {
					color:          transparent; // Just here to set the width.
					padding-right:  1em; // For the icon.
					pointer-events: none;
					position:       relative;
					white-space:    nowrap;
					width:          fit-content;

					// The actual drop-down.
					> select {
						@extend %link--select;

						color:          var(--color);
						left:           0;
						max-width:      calc(100% + var(--link--enlargement) * 2); // Icon.
						overflow:       hidden;
						padding-right:  1ch;
						pointer-events: auto;
						position:       absolute;
						text-overflow:  ellipsis;

						@include hover {
							&:hover + span {
								// Copied from links.
								$thanksNex3: 'opacity(var(--link--hover--opacity))';

								filter: unquote($thanksNex3);
							}
						}
					}

					// The icon.
					> span:last-child {
						color:    var(--color);
						position: absolute;
						right:    0;
						width:    1ch;

						// Copied from links.
						transition-duration:        var(--link--hover--transition);
						transition-property:        filter;
						transition-timing-function: linear;
					}
				}
			}
		}
	}



	// Inset text column.
	> main {
		@extend %--page-container;

		padding-top:    var(--margin--vertical--4);
		padding-bottom: var(--margin--vertical--4);

		> header {
			margin-bottom:  var(--margin--vertical--4);

			@include breakpoint(568) {
				column-gap:            var(--margin);
				display:               grid;
				grid-auto-rows:        min-content 1fr;
				grid-template-columns: repeat(3, minmax(0, 1fr));

				> h1 { grid-column: 1 / span 2 }
				> h1:only-child { grid-column: 1 / span 3 }
			}



			// The date.
			> p {
				margin-top: var(--margin--vertical);

				@include breakpoint(568) { grid-column: 1 / span 2 }
			}



			// Right rail.
			> address,
			> ul {
				@extend %type--layout;
				display:        flex;
				flex-direction: column;
				margin-top:     var(--margin--vertical--2);

				@include breakpoint(568) {
					grid-row:    1 / span 2;
					grid-column: 3 / span 1;
					margin-top:  initial;
				}
			}

			@include breakpoint(568) {
				> h1 + ul { grid-row:  1 / span 1 } // Without a date before it.
			}



			// The info block on the index.
			> address {
				gap: var(--margin--vertical);

				> div {
					> p > a { @extend %icon--link }

					> p:not(:first-child) { margin-top: var(--typography--between) }
				}
			}



			// The ToC.
			> ul {
				--typography--leading: var(--typography--leading--loose);

				gap: var(--typography--between);

				@include breakpoint(568) { --typography--leading: var(--typography--leading--base) }

				li {
					@extend %typography;

					color:       var(--color--links);
					white-space: nowrap;
					width:       fit-content;

					a {
						@extend %link--element;

						display:        block;
						margin-bottom:  initial;
						margin-top:     initial;
						max-width:      calc(100% + var(--link--enlargement) * 2);
						overflow:       hidden;
						padding-bottom: initial;
						padding-right:  calc(var(--link--enlargement) + 1.05em);
						padding-top:    initial;
						position:       relative;
						text-overflow:  ellipsis;

						&:after {
							@extend .icon--sf;

							--icon--shift: 0.05em;

							content: 'â†“';
							position: absolute;
							right:    var(--link--enlargement);
						}
					}
				}
			}
		}



		// Parsed Markdown block.
		@import 'markdown';



		// Home/top links at the end.
		> footer {
			margin-top: max(var(--margin--vertical--4), calc(50vh - var(--margin--vertical--4)));

			> div {
				--color: var(--link--color);

				align-items:     start;
				display:         flex;
				gap:             calc(var(--margin) / 2);
				justify-content: space-between;
				margin-top:      var(--margin--vertical);

				@include breakpoint(568) { gap: var(--margin) }

				> a {
					@extend %link--element;

					&:last-child { white-space: nowrap }
				}
			}
		}
	}



	// Unique to the landing page.
	&.index {
		@extend %--reverse;

		> main {
			// Index indexes.
			> nav {
				column-gap: var(--margin);
				display:    grid;
				margin-top: var(--margin--vertical--4);
				row-gap:    var(--margin--vertical--2);

				@include breakpoint(568) { grid-template-columns: repeat(3, minmax(0, 1fr)) }

				// Each list.
				aside {
					> menu {
						@extend %type--layout;

						--typography--leading: var(--typography--leading--loose);

						@include breakpoint(568) { --typography--leading: var(--typography--leading--base) }

						display:        flex;
						flex-direction: column;
						gap:            var(--typography--between);
						margin-top:     var(--margin--vertical);

						> li > a { @extend %link--element }
					}
				}
			}
		}
	}



	// Class list.
	&.class {
		@extend %--reverse;

		> main {
			> article {
				&:first-child { // No title.
					margin-top:  calc(-1 * var(--margin--vertical--2));
					padding-top: var(--margin--vertical--2);
				}

				> button {
					@extend %link--element;

					grid-column: 1;
				}

				> ul {
					--groups:           2;

					column-gap:         var(--margin);
					display:            grid;
					grid-auto-columns:  minmax(0, 1fr);
					grid-auto-flow:     column;
					grid-template-rows: repeat(calc(var(--count) / var(--groups)), min-content);
					list-style:         initial;
					padding:            initial;

					@include breakpoint(568) {
						--margin--top:  0rem;

						grid-column: 2 / span 2;
					}

					> li {
						display: block;
						padding: initial;
					}
				}
			}
		}
	}
}



// Low to override defaults.
%icon--link {
	@extend %link--text;

	&:after {
		@extend .center--x;
		@extend .icon--sf;

		content: var(--icon);
	}

	&[href^="#"]:after    { --icon: 'â†“' } // Anchor.
	&[href^="/"]:after    { --icon: 'â†’' } // Internal.
	&[href^="http"]:after { --icon: 'â†—'; --icon--shift: 0.3rem } // External.

	&[href*=".pdf"]:after {
		@extend .icon--sf--regular;

		--icon: 'â¤“'; // PDF/downloads.

		--icon--shift: 0.05em;
	}



// 	&[href*=".pdf"]:after,
// 	&[href*="courses.newschool.edu"]:after,
// 	&[href*="docs.google.com"]:after,
// 	&[href*="drive.google.com"]:after,
// 	&[href*="eric.young.li"]:after,
// 	&[href*="github.com"]:after,
// 	&[href*="mailto:"]:after,
// 	&[href*="michaelfehrenbach.com"]:after,
// 	&[href*="mpscd.parsons.edu"]:after,
// 	&[href*="slack.com"]:after,
// 	&[href*="syllabus"]:after,
// 	&[href*="zoom.us"]:after {
// 		@extend .icon--emoji;
//
// 		--icon--gap: 0.5em;
// 	}
//
// 	&[href*=".pdf"]:after                  { --icon: 'ðŸ™ƒ' }
// 	&[href*="courses.newschool.edu"]:after { --icon: 'ðŸ™ƒ' }
// 	&[href*="docs.google.com"]:after       { --icon: 'ðŸ™ƒ' }
// 	&[href*="drive.google.com"]:after      { --icon: 'ðŸ™ƒ' }
// 	&[href*="eric.young.li"]:after         { --icon: 'ðŸ™ƒ' }
// 	&[href*="github.com"]:after            { --icon: 'ðŸ™ƒ' }
// 	&[href*="mailto:"]:after               { --icon: 'ðŸ™ƒ' }
// 	&[href*="michaelfehrenbach.com"]:after { --icon: 'ðŸ™ƒ' }
// 	&[href*="mpscd.parsons.edu"]:after     { --icon: 'ðŸ™ƒ' }
// 	&[href*="slack.com"]:after             { --icon: 'ðŸ™ƒ' }
// 	&[href*="syllabus"]:after              { --icon: 'ðŸ™ƒ' }
// 	&[href*="zoom.us"]:after               { --icon: 'ðŸ™ƒ' }
}
