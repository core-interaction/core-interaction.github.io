> article {
	@extend %type--layout;

	--typography--leading-shoulder: calc(var(--typography--font-size) * (var(--typography--leading) + var(--typography--shoulder) * 2));

	min-height: 30vh;

	// Sequential spacing between `p`.
	> *:not(:first-child) { margin-top: var(--margin--top, var(--typography--leading-shoulder)) }



	h1 { display: none } // So we don’t forget.

	p, hr { max-width: 70ch }

	a {
		@extend %link--text;
		@extend %font--underline;

		--color: var(--link--color);

		color: var(--link--color);
	}

	// Prominence for link-only paragraphs/li.
	cite > a,
	.icon-link > a,
	.icon-link > p > a,
	.icon-link > li > a,
	.icon-link > li > p > a {
		@extend %font--underline--disable;
		@extend %icon--link;
	}



	// Dividers.
	hr {
		height:   var(--typography--cap);
		overflow: hidden;

		&:after {
			content:       '--------------------------------------------------------------------------------';
			display:       block;
			margin-top:    var(--typography--margin--top);
			overflow-wrap: anywhere;
			width:         100%;
		}
	}



	// Lists.
	ul,
	ol {
		@extend %type--layout;

		display:             grid;
		gap:                 var(--typography--between);
		list-style-position: outside;

		> li {
			@extend %typography; // For paragraph-less lists.

			display:    list-item;
			margin-top: var(--typography--margin--top);
			max-width:  60ch;

			&:before { display: none } // Collides with the marker, so we use the margin.

			> h3,
			> h4,
			> p {
				padding-left: 1ch;

				&:first-child:before,
				&:last-child:after { display: none }; // Since the `li` is a type element.

				&:not(:first-child) { margin-top: var(--typography--leading-shoulder) }
				&:not(:only-child):last-child { margin-bottom: calc(var(--typography--font-size) * var(--typography--leading)) }
			}

			&:not(:first-child) {
				> h3,
				> h4,
				> p {
					&:first-child { margin-top: calc(var(--typography--font-size) * var(--typography--leading)) }
				}
			}
		}
	}

	ul {
		list-style-type: '-';
		padding-left:    1ch;

		> li { padding-left: 1ch }

		&.no-marker {
			--typography--leading: var(--typography--leading--loose);

			list-style-type: none;
			padding-left:    initial;

			@include breakpoint(568) { --typography--leading: var(--typography--leading--base) }

			> li { padding-left: initial }
		}
	}

	ol {
		// TODO This does not work with paragraph lists.
		counter-reset: list;

		> li:before {
			content:           counter(list) ':';
			counter-increment: list;
			display:           inline-block;
			visibility:        visible;
			width:             4ch;
		}
	}



	// Tables.
	table {
		width: fit-content;

		tr:not(:first-child) > td { border-top: var(--typography--leading-shoulder) solid transparent }
		tr > td:not(:first-child) { border-left: var(--margin) solid transparent }

		&.row-header thead { display: none }
	}



	// Quotes/callouts.
	blockquote {
		--margin--top: var(--margin--vertical--2);

		font-style:   italic;
		padding-left: 3ch;
		position:     relative;

		@include breakpoint(568) {
			padding-left:  5ch;
			padding-right: 5ch;
		}

		&:before {
			content:    '| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | ';
			font-style: normal;
			left:       0;
			max-height: calc(100% + var(--typography--between));
			overflow:   hidden;
			position:   absolute;
			top:        calc(var(--typography--margin--top) - 0.1em);
			width:      1ch;
		}

		> *:not(:first-child) { margin-top: var(--typography--leading-shoulder) }

		&.callout {
			--padding: 2ch;

			background:    var(--color--alpha);
			border-radius: var(--border--radius);
			font-style:    normal;
			padding:       var(--padding);
			position:      relative;

			&[icon] {
				padding-left: calc(2 * var(--padding) + 2ch);

				&:before {
					content:    attr(icon);
					left:       var(--padding);
					margin-top: var(--typography--margin--top);
					position:   absolute;
					text-align: center;
					top:        var(--padding);
					transform:  scale(1.1); // This might need to be params.
					width:      2ch;
				}
			}
		}

		// Caption/credit.
		&:not(.callout ) + p {
			--margin--top: var(--typography--leading-shoulder);

			font-style: italic;

			> em, > cite { font-style: normal }

			+ * {
				--margin--top:           var(--margin--vertical--2);
				--margin--top--previous: var(--typography--leading-shoulder);

				+ * { --margin--top--previous: var(--margin--vertical--2) }
			}
		}

		&.quote {
			--margin--top: var(--margin--vertical--6);

			+ p + * {
				--margin--top: var(--margin--vertical--6);

				+ * { --margin--top--previous: var(--margin--vertical--6) }
			}
		}

		+ * {
			--margin--top:           var(--margin--vertical--2);
			--margin--top--previous: var(--typography--leading-shoulder);

			+ * { --margin--top--previous: var(--margin--vertical--2) }
		}
	}



	// Open/close details/summary.
	details {
		> summary {
			@extend %link--element;

			--color: var(--color--links);

			> p {
				@extend %icon--link;

				margin-bottom: calc(var(--typography--margin--bottom) - var(--link--enlargement) / 2);

				&:active {
					-webkit-touch-callout: none;
					-webkit-user-select:   none; // No selecting while clicking.
					background-color:      initial; // Prevent doubling with the `summary`.
					user-select:           none;
				}

				&:after {
					--icon:       '+';
					--icon--scale: 1.25;
					--icon--shift: 0em;

					visibility: visible; // Override typography pseudo.
				}
			}
		}

		&[open] > summary > p:after {content: '-' }

		// The contents.
		> div { margin-top: var(--typography--leading-shoulder) }

		+ * { --margin--top: var(--margin--vertical--2) }
	}



	// Images and videos!
	figure {
		--margin--top: var(--margin--vertical--2);

		display:        flex;
		flex-direction: column;
		width:          fit-content;

		> img {
			max-height:      var(--max--height, 66vh);
			object-fit:      contain; // This will do, for now.
			object-position: left;
		}

		> iframe {
			aspect-ratio: var(--aspect--ratio, 16 / 9);
			background:    var(--color--alpha);
			border-radius: var(--border--radius);
			border:       initial;
			display:      block;
			max-width:    100%;
			width:        100vw;

			@include browser-specific(safari) {
				&[src*="drive.google.com"] {
					display: none;

					+ figcaption {
						font-size:     0rem;
						margin-bottom: calc(-1 * var(--typography--shoulder) * var(--typography--font-size) + var(--typography--margin--bottom));
						margin-top:    initial;
						max-width:     initial;
						visibility:    hidden;

						// Show a warning.
						&:after {
							content:    'Safari security settings prevent Google Drive embeds—so you’ll need to go to the original.';
							display:    inline-block;
							font-style: italic;
							visibility: visible;
							font-size:  var(--typography--font-size);
							max-width:  60ch;
						}
					}
				}
			}
		}

		> figcaption {
			@extend %typography;

			font-style: italic;
			margin-top: var(--typography--between);
			max-width:  60ch;

			> em, > cite { font-style: normal }
		}

		+ * {
			--margin--top:           var(--margin--vertical--2);
			--margin--top--previous: var(--margin--vertical--2);

			+ * { --margin--top--previous: var(--margin--vertical--2) }
		}
	}



	aside {
		@extend .right;

		--margin--top: var(--margin--vertical--2);

		> figure:not(:first-child) { margin-top: var(--typography--between) }

		+ * {
			--margin--top: var(--margin--vertical--2);
		}
	}



	// Lower for the cascade.
	h2 {
		--margin--top: var(--margin--vertical--4);

		margin-bottom:  var(--typography--margin--bottom);
		padding-bottom: calc(var(--typography--leading-shoulder) - var(--typography--between));
		position:       relative;
		width:          fit-content;

		&:after {
			content:     '----------------------------------------------------------------------';
			max-width:   100%;
			overflow:    hidden;
			position:    absolute;
			top:         1em;
			visibility:  visible; // Override typography.
			white-space: nowrap;
		}

		+ * {
			--margin--top:           var(--margin--vertical--2); // Think of this as its margin-bottom.
			--margin--top--previous: var(--margin--vertical--4);

			+ * { --margin--top--previous: var(--margin--vertical--2) } // Think of this as its margin-bottom.
		}
	}

	h3 { --margin--top: var(--margin--vertical--2) }



	// Lower, cascade.
	hr,
	.callout {
		--margin--top: var(--margin--vertical--6);

		+ * {
			--margin--top:           var(--margin--vertical--6);
			--margin--top--previous: var(--margin--vertical--6);

			+ * { --margin--top--previous: var(--margin--vertical--6) }
		}
	}



	// Manual spacing decisions.
	.two-above {
		--margin--top: var(--margin--vertical--2);

		+ * { --margin--top--previous: var(--margin--vertical--2) }
	}

	.two-below + * { --margin--top: var(--margin--vertical--2) }

	.four-above {
		--margin--top: var(--margin--vertical--6); // Actually six, keeping the name to retain Markdown compatibility with TI.

		+ * { --margin--top--previous: var(--margin--vertical--6) }
	}

	.four-below + * { --margin--top: var(--margin--vertical--6) }



	// “Disabled” looking stuff.
	.faded { opacity: 0.4 }



	// Column stuff.
	@include breakpoint(568) {
		align-items:           start;
		display:               grid;
		grid-auto-rows:        min-content;
		grid-template-columns: repeat(3, minmax(0, 1fr));
		column-gap:            var(--margin);

		> * { grid-column: 1 / span 3 } // Everything full width, by default.

		.left {
			grid-column:  1 / span 2;
			margin-right: 2ch;

			&:first-child + .right { --margin--top: 0rem } // Not `initial` to prevent fallback.
			&:not(:first-child) + .right { --margin--top: var(--margin--top--previous) }
		}

		.right {
			grid-column: 3 / span 1;
		}

		.left,
		.right {
			@for $row from 1 through 12 {
				&[rows="#{$row}"] {
					grid-row: span $row;
				}
			}
		}
	}
}
