---
# Front-matter to make Jekyll process this file (render to CSS).
---



@use "utilities" as *;

@use 'reset';
@use 'typography';
@use 'fonts';
@use 'links';



:root {
	@extend %font--times--regular;

	--typography--leading:        1.333;
	--typography--leading--tight: 1;
	--typography--leading--loose: 1.618;

	--typography--tracking: -0.015;

	--typography--size: 1.6rem;

	--typography--size--h1:   calc(var(--typography--size) * 3);
	--typography--size--h2:   calc(var(--typography--size) * 1.75);
	--typography--size--h3:   calc(var(--typography--size) * 1.333);
	--typography--size--base: var(--typography--size); // For resets.

	--margin:           2.4rem;
	--margin--vertical: var(--margin);

	--page--width: 100vw;

	--divider--width:     0.1rem;
	--divider--width--h1: 0.3rem; // Approx e-crossbar on the `h1`.

	--color:             black;
	--color--background: white;

	--color--links:          blue;
	--color--links--reverse: white ;

	--color--highlight:          hsl(0, 0%, 0%, 3.333%);
	--color--highlight--reverse: hsl(0, 0%, 100%, 6.666%);

	--link--color:       var(--color--links);
	--link--enlargement: 0.4rem;
	--link--highlight:   var(--color--highlight);
	--link--outline:     0.2rem;

	--link--hover--opacity:    0.666;
	--link--hover--transition: 100ms;

	--alpha--inactive: 0.333;

	scroll-behavior: smooth;

	@include hover {
		--color--highlight:          hsl(0, 0%, 0%, 5%); // Denser to offset hover opacity.
		--color--highlight--reverse: hsl(0, 0%, 100%, 20%);
	}

	@include browser-specific(safari--mobile) {
		--color--highlight:          hsl(0, 0%, 0%, 10%);
		--color--highlight--reverse: hsl(0, 0%, 100%, 20%);
	}

	@include breakpoint(320) { --typography--size: calc((16/375) * 100vw) }

	@include breakpoint(768) {
		--typography--size: 2rem;

		--typography--size--h1: calc(var(--typography--size) * 4);
		--typography--size--h2: calc(var(--typography--size) * 2);

		--margin: 3.6rem;

		--divider--width--h1: 0.4rem;

		--link--enlargement: 0.8rem;
	}

	@include breakpoint(1024) {
		--margin:      4.8rem;
		--page--width: 102.4rem;
	}

	@include landscape { --margin--vertical: calc(var(--margin) * 0.75) }
	@include tall      { --margin--vertical: var(--margin) }
}



	// The main column constraints.
%--page-container {
	margin-left:    auto;
	margin-right:   auto;
	max-width:      var(--page--width);
	padding-left:   var(--margin);
	padding-right:  var(--margin);
	width:          100%;
}



// Flip the colors.
%--reverse {
	--color--background--parent: var(--color--background);

	--link--color:     var(--color--links--reverse);
	--link--highlight: var(--color--highlight--reverse);

	background-color: var(--color--links);

	> * {
		--color:             var(--color--background--parent);
		--color--background: var(--color--links);
	}
}



// Icon stuff.
%--icon--span {
	--icon--gap: 0.333em;

	display:     inline-block;
	height:      1em;
	font-weight: var(--typography--weight);
	margin-left: var(--icon--gap);
	transform:   translateY(var(--icon--shift, 0rem)) scale(var(--icon--scale, 1));

	&.center--x { --icon--shift: 0.066em } // Center down to x-height;
}




body {
	// Basics.
	h1 {
		--typography--tracking: -0.025;

		max-width: 20ch;
	}

	h1,
	h2,
	h3 {
		--typography--leading: var(--typography--leading--tight);
	}

	h1 { --typography--size: var(--typography--size--h1) }
	h2 { --typography--size: var(--typography--size--h2) }
	h3 { --typography--size: var(--typography--size--h3) }

	hr {
		background-color: var(--color);
		height:           var(--divider--width);
	}



	// Icons. Keep these up here so Markdown variants cascade.
	.icon--sf {
		@extend %--icon--span;
		@extend %font--sf--light;
	}

	.icon--wingdings {
		@extend %--icon--span;
		@extend %font--wingdings;

		--icon--scale: 1.25;
	}



	// Breadcrumb thing.
	> nav {
		@extend %type--layout;

		background-color: var(--color--background);
		margin-bottom:    calc(var(--typography--cap) * -1);
		overflow:         hidden; // Fix horizontal scroll on Safari.
		padding-bottom:   var(--typography--cap);
		padding-top:      var(--margin--vertical);
		position:         sticky;
		top:              calc(var(--typography--cap) - var(--margin--vertical));
		z-index:          1;

		> div {
			@extend %--page-container;

			align-items:           end;
			display:               grid;
			gap:                   var(--margin);
			grid-template-columns: max-content minmax(0, 1fr) max-content;

			> a {
				@extend %link--element;

				> p { color: var(--link--color) }
			}



			// The `select` drop-down container.
			> div {
				--color: var(--color--links);

				line-height:   initial;

				> p {
					color:          transparent; // Just here to set the width.
					padding-right:  1em; // For the icon.
					pointer-events: none;
					position:       relative;
					white-space:    nowrap;
					width:          fit-content;

					// The actual drop-down.
					> select {
						@extend %link--select;

						color:          var(--color);
						left:           0;
						max-width:      calc(100% + var(--link--enlargement) * 2); // Icon.
						overflow:       hidden;
						padding-right:  1em;
						pointer-events: auto;
						position:       absolute;
						text-overflow:  ellipsis;

						@include hover {
							&:hover + span {
								// Copied from links.
								$thanksNex3: 'opacity(var(--link--hover--opacity))';

								filter: unquote($thanksNex3);
							}
						}
					}

					// The icon.
					> span:last-child {
						@extend %font--sf--mono--light;

						color:       var(--color);
						font-weight: 100; // Force it.
						position:    absolute;
						right:       0;
						text-align:  right;
						width:       1em;

						// Copied from links.
						transition-duration:        var(--link--hover--transition);
						transition-property:        filter;
						transition-timing-function: linear;
					}
				}
			}
		}
	}



	// Inset text column.
	> main {
		@extend %--page-container;

		padding-top:    calc(var(--margin--vertical) * 4);
		padding-bottom: calc(var(--margin--vertical) * 4);

		> header {
			align-items:         end;
			border-bottom-color: var(--color);
			border-bottom-style: solid;
			border-bottom-width: var(--divider--width--h1);
			column-gap:          var(--margin);
			display:             flex;
			justify-content:     space-between;
			margin-bottom:       calc(var(--margin--vertical) * 4);
			padding-bottom:      calc(var(--margin--vertical) * 1);
			row-gap:             var(--margin--vertical);

			// The date.
			> p { --typography--size: var(--typography--size--h2) }
		}



		// Parsed Markdown block.
		@import 'markdown';



		// Home/top links at the end.
		> footer {
			border-top-color: var(--color);
			border-top-style: solid;
			border-top-width: var(--divider--width);
			margin-top:       max(calc(var(--margin--vertical) * 4), calc(50vh - var(--margin--vertical) * 4));

			> div {
				--color: var(--link--color);

				align-items:     start;
				display:         flex;
				gap:             var(--margin);
				justify-content: space-between;
				margin-top:      var(--margin--vertical);

				> a {
					@extend %link--element;

					&:last-child { white-space: nowrap }
				}
			}
		}
	}



	// Unique to the landing page.
	&.index {
		@extend %--reverse;

		> main {
			// Index indexes.
			> nav {
				column-gap: var(--margin);
				display:    grid;
				margin-top: calc(var(--margin--vertical) * 4);
				row-gap:    calc(var(--margin--vertical) * 2);

				@include breakpoint(568) { grid-template-columns: repeat(3, minmax(0, 1fr)) }

				// Each list.
				aside {
					> menu {
						@extend %type--layout;

						display:        flex;
						flex-direction: column;
						gap:            var(--typography--between);
						margin-top:     var(--margin--vertical);

						> li > a { @extend %link--element }
					}
				}
			}
		}
	}



	// Class list.
	&.class {
		@extend %--reverse;

		p { grid-column: 1 }

		ul {
			--typography--size: var(--typography--size--h3);

			column-gap:            var(--margin);
			display:               grid;
			grid-template-columns: repeat(2, minmax(0, 1fr));
			list-style:            initial;
			padding:               initial;

			@include breakpoint(568) {
				--margin--top:  0rem;

				grid-column: 2 / span 2;
			}

			> li {
				display: block;
				padding: initial;
			}
		}
	}
}
