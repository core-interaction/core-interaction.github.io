> article {
	@extend %type--layout;

	--typography--leading-shoulder: calc(var(--typography--font-size) * (var(--typography--leading) + var(--typography--shoulder) * 2));

	min-height: 30vh;

	// Sequential spacing between `p`.
	> *:not(:first-child) { margin-top: var(--margin--top, var(--typography--leading-shoulder)) }



	h1 { display: none } // So we don’t forget.

	p { max-width: 70ch }

	a {
		@extend %link--text;
		@extend %font--underline;

		--color: var(--link--color);

		color: var(--link--color);
	}

	del {
		text-decoration:           line-through;
		text-decoration-thickness: calc(1.5 * var(--typography--underline) * 1em);
	}

	// Prominence for link-only paragraphs/li.
	cite > a,
	.icon-link > a,
	.icon-link > p > a,
	.icon-link > li > a,
	.icon-link > li > p > a {
		@extend %font--underline--disable;
		@extend %icon--link;
	}

	cite { white-space: nowrap }



	// Double-wide em-dashes from Ruby filter.
	span.mdash:after { content: '—'	}



	// “Fenced” code blocks.
	.highlighter-rouge {
		--margin--top: var(--margin--vertical--2);

		+ * {
			--margin--top:           var(--margin--vertical--2);
			--margin--top--previous: var(--margin--vertical--2);

			+ * { --margin--top--previous: var(--margin--vertical--2) }
		}
	}



	// Dividers.
	hr {
		height:    var(--typography--cap);
		max-width: 83ch;
		overflow:  hidden;

		&:after {
			content:       '------------------------------------------------------------------------------------------';
			display:       block;
			margin-top:    var(--typography--margin--top);
			overflow-wrap: anywhere;
			width:         100%;
		}
	}



	// Lists.
	ul,
	ol {
		@extend %type--layout;

		display:               grid;
		gap:                   var(--typography--between);
		grid-template-columns: minmax(0, 1fr); // Since “auto” is the min otherwise.
		list-style-position:   outside;

		> li {
			@extend %typography; // For paragraph-less lists.

			display:       list-item;
			margin-bottom: var(--typography--margin--bottom);
			margin-top:    var(--typography--margin--top);
			max-width:     60ch;

			&:before, &:after { display: none } // Collides with the marker, so we use the margin.

			> h3,
			> h4,
			> p,
			> div,
			> blockquote {
				--padding-left: 1ch;

				~ * { --padding-left: 1ch } // For nested lists, below.
			}

			> h3,
			> h4,
			> p,
			> div {
				padding-left: var(--padding-left); // More space for paragraph lists.

				&:first-child:before,
				&:last-child:after { display: none }; // Since the `li` is a type element.
			}

			> blockquote { margin-left: var(--padding-left) } // Since these have internal padding.

			> h3,
			> h4,
			> p,
			> h3 ~ ul,
			> h4 ~ ul,
			> p ~ ul,
			> h3 ~ ol,
			> h4 ~ ol,
			> p ~ ol,
			> div,
			> blockquote {
				&:not(:first-child) { margin-top: var(--typography--leading-shoulder) }
				&:last-child { margin-bottom: calc(var(--typography--font-size) * var(--typography--leading)) }
				&:not(:only-child):last-child { margin-bottom: calc(2 * var(--typography--font-size) * var(--typography--leading)) }
			}

			&:last-child > *:last-child:not(._) { margin-bottom: initial }
		}
	}

	ul {
		list-style-type: '-';
		padding-left:    calc(var(--padding-left, 0ch) + 1ch);

		> li { padding-left: 1ch }

		&.no-marker {
			--typography--leading: var(--typography--leading--loose);

			list-style-type: none;
			padding-left:    initial;

			@include breakpoint(568) { --typography--leading: var(--typography--leading--base) }

			> li {
				--typography--leading: var(--typography--leading--base);

				padding-left: initial;

				> * { padding-left: initial }
			}
		}

		ul { // Nested.
			list-style-type: '*';
			margin-left:     var(--padding-left);

			li:last-child { margin-bottom: initial } // Covered by the parent list.

			ul { list-style-type: '+' }
		}
	}

	ol {
		counter-reset: list;

		> li {
			padding-left: 4ch;
			position:     relative;

			&:before {
				content:           counter(list) ':';
				counter-increment: list;
				display:           block;
				position:          absolute;
				visibility:        visible;
				left:              0;
				top:               calc(var(--typography--margin--top) * -1);
			}
		}
	}



	// Tables.
	table {
		width: fit-content;

		tr:not(:first-child) > td { border-top: var(--typography--leading-shoulder) solid transparent }
		tr > td:not(:first-child) { border-left: var(--margin) solid transparent }

		&.row-header thead { display: none }
	}



	// Quotes/callouts.
	blockquote {
		--margin--top: var(--margin--vertical--2);

		> *:not(:first-child) { margin-top: var(--typography--leading-shoulder) }

		&.callout {
			--padding: 2ch;

			--color--background: var(--color--code--background);

			background-color: var(--color--background);
			border-radius:    var(--border--radius);
			font-style:       normal;
			padding:          var(--padding);
			position:         relative;

			code { mix-blend-mode: multiply }

			&[icon] {
				padding-left: calc(2 * var(--padding) + 2ch);

				&:before {
					content:    attr(icon);
					left:       var(--padding);
					margin-top: var(--typography--margin--top);
					position:   absolute;
					text-align: center;
					top:        var(--padding);
					transform:  scale(var(--icon--scale, 1.1));
					width:      2ch;
				}
			}
		}

		&:not(.callout) {
			font-style:   italic;
			padding-left: 3ch;
			position:     relative;

			@include breakpoint(568) {
				padding-left:  5ch;
				padding-right: 5ch;
			}

			&:before {
				content:    '| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | ';
				font-style: normal;
				left:       0;
				max-height: calc(100% + var(--typography--between));
				overflow:   hidden;
				position:   absolute;
				top:        calc(var(--typography--margin--top) - 0.1em);
				width:      1ch;
			}

			// Caption/credit.
			+ p {
				--margin--top: var(--typography--leading-shoulder);

				font-style: italic;

				> em, > cite { font-style: normal }

				+ * {
					--margin--top:           var(--margin--vertical--2);
					--margin--top--previous: var(--typography--leading-shoulder);

					+ * { --margin--top--previous: var(--margin--vertical--2) }
				}
			}
		}

		&.quote {
			--margin--top: var(--margin--vertical--4);

			@include breakpoint(568) { --margin--top: var(--margin--vertical--6) }

			+ p + * {
				--margin--top: var(--margin--vertical--4);

				@include breakpoint(568) { --margin--top: var(--margin--vertical--6) }

				+ * {
					--margin--top--previous: var(--margin--vertical--4);

					@include breakpoint(568) { --margin--top--previous: var(--margin--vertical--6) }
				}
			}
		}

		+ * {
			--margin--top:           var(--margin--vertical--2);
			--margin--top--previous: var(--typography--leading-shoulder);

			+ * { --margin--top--previous: var(--margin--vertical--2) }
		}
	}



	// Open/close details/summary.
	details {
		> summary {
			@extend %link--element;

			--color: var(--color--links);

			> p {
				@extend %icon--link;

				margin-bottom: calc(var(--typography--margin--bottom) - var(--link--enlargement) / 2);

				&:active {
					-webkit-touch-callout: none;
					-webkit-user-select:   none; // No selecting while clicking.
					background-color:      initial; // Prevent doubling with the `summary`.
					user-select:           none;
				}

				&:after {
					--icon:       '+';
					--icon--scale: 1.25;
					--icon--shift: 0em;

					visibility: visible; // Override typography pseudo.
				}
			}
		}

		&[open] > summary > p:after {content: '-' }

		// The contents.
		> div { margin-top: var(--typography--leading-shoulder) }

		+ * { --margin--top: var(--margin--vertical--2) }
	}



	// Images and videos!
	figure {
		> img,
		> div {
			max-height: var(--height--max, 66vh);
			max-width:  var(--width--max, 100%);
		}

		> img {
			object-fit:      contain; // This will do, for now.
			object-position: left;
		}

		> div {
			border:       var(--color--code--background) solid 0.1rem;
			aspect-ratio: var(--aspect--ratio, 16 / 9);
			display:      flex;

			iframe {
				height: 100%;
				width:  100%;
			}

			&.google { @include browser-specific(safari) { display: none } } // No point.

			&.example { // Code blocks.
				aspect-ratio: var(--aspect--ratio);
				border:       initial;
				height:       75vh;
				max-height:   initial;

				@include breakpoint(568) {
					height: var(--height--max);
				}
			}
		}

		// For Google videos that require a sign-in.
		> aside {
			@extend %typography;

			margin-bottom: var(--typography--margin--bottom);
			margin-top:    var(--typography--margin--top);
			max-width:     50ch;

			&:before { display: none }

			&:after {
				content:    'You’ll need to have Chrome signed in to your New School profile to see this in-page.';
				display:    inline-block;
				font-style: italic;
				margin-top: var(--typography--between);
				visibility: visible;

				@include browser-specific(safari) {
					content:    'Safari security settings prevent Google Drive embeds——so you’ll need to go to the original.';
					margin-top: initial;
				}
			}

			+ figcaption { margin-top: var(--typography--leading-shoulder) }
		}

		> figcaption {
			@extend %typography;

			font-style: italic;
			margin-top: var(--typography--between);
			max-width:  60ch;

			> em, > cite { font-style: normal }
		}

		&:not(.right) {
			--margin--top: var(--margin--vertical--2);

			+ * {
				--margin--top:           var(--margin--vertical--2);
				--margin--top--previous: var(--margin--vertical--2);

				+ * { --margin--top--previous: var(--margin--vertical--2) }
			}
		}
	}



	// Right rails.
	aside {
		@extend .right;

		figure:not(:first-child) {
			margin-top: var(--typography--between);

			&.one-above,
			&.one-below,
			&.two-above,
			&.two-below,
			&.four-above,
			&.four-below { margin-top: var(--margin--top) }
		}

		&.sticky {
			@include breakpoint(568) {
				align-self: stretch;

				> div {
					position: sticky;
					top:      var(--margin--vertical--4);
				}
			}
		}
	}



	// Lower for the cascade.
	h4:not(._) {
		--margin--top: var(--margin--vertical--2);

		+ * { --margin--top--previous: var(--margin--vertical--2) }
	}

	h3:not(._) {
		--margin--top: var(--margin--vertical--4);

		+ * {
			--margin--top:           var(--margin--vertical--2); // Think of this as its margin-bottom.
			--margin--top--previous: var(--margin--vertical--4);

			+ * { --margin--top--previous: var(--margin--vertical--2) } // Think of this as its margin-bottom.
		}
	}

	h3:not(._),
	h2:not(._) {
		margin-bottom:  var(--typography--margin--bottom);
		padding-bottom: calc(var(--typography--leading-shoulder) - var(--typography--between));
		position:       relative;
		width:          fit-content;

		&:after {
			content:       '----------------------------------------------------------------------';
			display:       block;
			height:        1em;
			max-width:     100%;
			overflow-wrap: anywhere;
			overflow:      hidden;
			position:      absolute;
			visibility:    visible; // Override typography.
		}
	}

	h2:not(._) {
		--margin--top: var(--margin--vertical--4);

		max-width: 52ch; // Two columns.

		@include breakpoint(568) { --margin--top: var(--margin--vertical--6) }

		+ * {
			--margin--top:           var(--margin--vertical--4); // Think of this as its margin-bottom.
			--margin--top--previous: var(--margin--vertical--4);

			@include breakpoint(568) { --margin--top--previous: var(--margin--vertical--6) }

			+ * { --margin--top--previous: var(--margin--vertical--4) } // Think of this as its margin-bottom.
		}

		+ h3:not(._) {
			@include breakpoint(568) { --margin--top: var(--margin--vertical--6) } // Think of this as its margin-bottom.

			+ * {
				@include breakpoint(568) { --margin--top--previous: var(--margin--vertical--6) } // Think of this as its margin-bottom.
			}
		}
	}

	@at-root {
		.week { // Tighter on agendas, which don’t have h3.
			h2:not(._) {
				+ * {
					--margin--top: var(--margin--vertical--2); // Think of this as its margin-bottom.

					+ * { --margin--top--previous: var(--margin--vertical--2) } // Think of this as its margin-bottom.
				}
			}
		}
	}



	// Lower, cascade.
	hr:not(._),
	.callout:not(._) {
		--margin--top: var(--margin--vertical--4);

		@include breakpoint(568) { --margin--top: var(--margin--vertical--6) }

		+ * {
			--margin--top:           var(--margin--vertical--4);
			--margin--top--previous: var(--margin--vertical--4);

			@include breakpoint(568) {
				--margin--top:           var(--margin--vertical--6);
				--margin--top--previous: var(--margin--vertical--6);
			}


			+ * {
				--margin--top--previous: var(--margin--vertical--4);

				@include breakpoint(568) { --margin--top--previous: var(--margin--vertical--6) }
			}
		}
	}



	// Manual spacing decisions.
	.one-above:not(._) {
		--margin--top: var(--typography--leading-shoulder);

		+ * { --margin--top--previous: var(--typography--leading-shoulder) }
	}

	.one-below:not(._) + * { --margin--top: var(--typography--leading-shoulder) }

	.two-above:not(._) {
		--margin--top: var(--margin--vertical--2);

		+ * { --margin--top--previous: var(--margin--vertical--2) }
	}

	.two-below:not(._) + * { --margin--top: var(--margin--vertical--2) }

	.four-above:not(._) {
		--margin--top: var(--margin--vertical--4);

		@include breakpoint(568) { --margin--top: var(--margin--vertical--6) } // Go to six, keeping the name to retain Markdown compatibility with TI.

		+ * {
			--margin--top--previous: var(--margin--vertical--4);

			@include breakpoint(568) { --margin--top--previous: var(--margin--vertical--6) }
		}
	}

	.four-below:not(._) + * { --margin--top: var(--margin--vertical--6) }



	// “Disabled” looking stuff.
	.faded { opacity: 0.4 }



	// Column stuff.
	@media (max-width: 567px) { // Manual, to scope it down.
		.right {
			--margin--top: var(--margin--vertical--4);

			+ * {
				--margin--top:           var(--margin--vertical--4);
				--margin--top--previous: var(--margin--vertical--4);

				+ * { --margin--top--previous: var(--margin--vertical--4) }
			}
		}
	}

	@function siblings($count) {
		$siblings: '';

		@for $each from 1 through $count {
			$siblings: $siblings + ' + *';
		}

		@return $siblings;
	}

	@include breakpoint(568) {
		align-items:           start;
		display:               grid;
		grid-auto-rows:        min-content;
		grid-template-columns: repeat(6, minmax(0, 1fr));
		column-gap:            var(--margin);

		> * { grid-column: 1 / span 6 } // Everything full width, by default.

		.half {
			align-self:  center;
			grid-column: span 3;

			&:first-child + .half { --margin--top: 0rem } // Not `initial` to prevent fallback.
			&:not(:first-child) + .half { --margin--top: var(--margin--top--previous) }
		}

		h2,
		h3,
		h4,
		p,
		blockquote,
		ul,
		ol {
			&.half,
			&.left,
			&%--left {
				margin-right: 2ch; // Inset type edge.
			}
		}

		.left,
		%--left {
			grid-column: 1 / span 4;
		}

		.left {
			&:first-child + .right { --margin--top: 0rem } // Not `initial` to prevent fallback.
			&:not(:first-child) + .right { --margin--top: var(--margin--top--previous) }
		}

		.right {
			grid-column: 5 / span 2;

			@for $row from 2 through 12 {
				&[rows="#{$row}"] {
					grid-row: span $row + 1;
				}

				@for $sibling from 2 through $row {
					&[rows="#{$row}"] #{siblings($sibling - 1)} {
						@extend %--left;
					}
				}
			}
		}
	}
}
